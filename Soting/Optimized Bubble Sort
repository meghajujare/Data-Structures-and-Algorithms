// package Sorting;
// Worst time complexity=O(n^2)
// Best time complexity=O(n)
public class OptimizedBubbleSort {
    public static void optimized_bubble_sort(int arr[]) {

        for (int i = 0; i < arr.length - 1; i++) {
            boolean swapped = false;
            for (int j = 0; j < arr.length - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                    swapped = true;
                }
            }
            if (swapped == false) {
                break;
            }
        }
    }

    public static void printArray(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }

    public static void main(String args[]) {
        int arr[] = { 1, 2, 9, 8, 7, 6 };
        optimized_bubble_sort(arr);
        printArray(arr);
    }

}
